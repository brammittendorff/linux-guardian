# cargo-deny configuration
# https://embarkstudios.github.io/cargo-deny/

[graph]
# Crates.io registry
all-features = false
no-default-features = false

[advisories]
version = 2
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# Vulnerability severity threshold
# Options: none, low, medium, high, critical
vulnerability = "deny"
# Crates with security notices
notice = "warn"
# Unsound crates
unsound = "warn"
# Yanked crates from crates.io
yanked = "deny"

# Ignore specific advisories (use sparingly!)
ignore = [
    # Example: "RUSTSEC-2020-0001",
]

[licenses]
version = 2
# Allow these licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "Unlicense",
    "0BSD",
]
# Deny these licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-3.0",
]
# Confidence threshold for license detection
confidence-threshold = 0.8
# Allow licenses only for specific crates
exceptions = [
    # Example: { allow = ["GPL-3.0"], name = "gpl-crate" },
]

# Uncomment and configure if you need to clarify licenses for specific crates:
# [[licenses.clarify]]
# crate = "ring"
# expression = "MIT AND ISC AND OpenSSL"
# license-files = [{ path = "LICENSE", hash = 0xbd0eed23 }]

[bans]
multiple-versions = "warn"
wildcards = "allow"
highlight = "all"
# Allow these workspace members to have multiple versions
allow = []
# Deny these crates entirely
deny = [
    # Example: { name = "openssl" },
]
# Skip checking these crates and their dependencies
skip = []
# Skip this crate from being checked for multiple versions
skip-tree = []

[sources]
# Deny crates from unknown registries or git sources
unknown-registry = "deny"
unknown-git = "warn"
# Allow only these git sources
allow-git = []
# Allow crates only from these registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
